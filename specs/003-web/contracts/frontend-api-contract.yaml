openapi: 3.0.3
info:
  title: 株価表示Web画面 - Frontend API Contract
  description: Frontend application's contract with existing Stock API backend
  version: 1.0.0
  contact:
    name: Stock Web UI Team

servers:
  - url: http://localhost:8000
    description: Development backend API
  - url: http://localhost:3000/api
    description: Development frontend proxy

paths:
  /stocks/{stock_code}:
    get:
      summary: 銘柄情報取得
      description: 指定した銘柄コードの詳細情報を取得
      operationId: getStockInfo
      parameters:
        - name: stock_code
          in: path
          required: true
          schema:
            type: string
            pattern: '^[0-9]{4}$'
            example: "7203"
        - name: use_real_data
          in: query
          required: false
          schema:
            type: boolean
            description: Use real Yahoo Finance data (true) or mock data (false)
      responses:
        '200':
          description: 銘柄情報取得成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockData'
        '400':
          description: 不正な銘柄コード
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        '404':
          description: 銘柄が見つからない
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        '500':
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'

  /stocks/{stock_code}/current:
    get:
      summary: リアルタイム価格取得  
      description: 指定した銘柄の現在価格情報を取得
      operationId: getCurrentPrice
      parameters:
        - name: stock_code
          in: path
          required: true
          schema:
            type: string
            pattern: '^[0-9]{4}$'
            example: "7203"
        - name: use_real_data
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: 現在価格取得成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentPriceResponse'
        '400':
          description: 不正な銘柄コード
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        '404':
          description: 銘柄が見つからない
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'

  /stocks/{stock_code}/history:
    get:
      summary: 価格履歴取得
      description: 指定した銘柄の過去価格履歴を取得
      operationId: getPriceHistory  
      parameters:
        - name: stock_code
          in: path
          required: true
          schema:
            type: string
            pattern: '^[0-9]{4}$'
            example: "7203"
        - name: days
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 365
            default: 30
            description: 取得する日数
        - name: use_real_data
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: 価格履歴取得成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PriceHistoryItem'
        '400':
          description: 不正なパラメータ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        '404':
          description: 銘柄が見つからない
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'

  /watchlist:
    get:
      summary: ウォッチリスト取得
      description: ユーザーのウォッチリストを取得
      operationId: getWatchlist
      responses:
        '200':
          description: ウォッチリスト取得成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WatchlistItemAPI'
    post:
      summary: ウォッチリストに追加
      description: 銘柄をウォッチリストに追加
      operationId: addToWatchlist
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddWatchlistRequest'
      responses:
        '201':
          description: ウォッチリスト追加成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WatchlistItemAPI'
        '400':
          description: 不正なリクエスト
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'

  /watchlist/{stock_code}:
    delete:
      summary: ウォッチリストから削除
      description: 指定した銘柄をウォッチリストから削除
      operationId: removeFromWatchlist
      parameters:
        - name: stock_code
          in: path
          required: true
          schema:
            type: string
            pattern: '^[0-9]{4}$'
      responses:
        '200':
          description: 削除成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Stock removed from watchlist"
        '404':
          description: 銘柄が見つからない
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'

components:
  schemas:
    StockData:
      type: object
      required:
        - stock_code
        - company_name
        - current_price
        - previous_close
        - price_change
        - price_change_pct
      properties:
        stock_code:
          type: string
          pattern: '^[0-9]{4}$'
          example: "7203"
        company_name:
          type: string
          example: "トヨタ自動車株式会社"
        current_price:
          type: number
          format: float
          minimum: 0
          example: 2580.0
        previous_close:
          type: number
          format: float
          minimum: 0
          example: 2550.0
        price_change:
          type: number
          format: float
          example: 30.0
        price_change_pct:
          type: number
          format: float
          example: 1.18
        last_updated:
          type: string
          format: date-time
          example: "2025-09-04T09:30:00Z"

    CurrentPriceResponse:
      type: object
      required:
        - stock_code
        - current_price
        - previous_close
        - price_change
        - price_change_pct
        - timestamp
      properties:
        stock_code:
          type: string
          pattern: '^[0-9]{4}$'
          example: "7203"
        current_price:
          type: number
          format: float
          minimum: 0
          example: 2580.0
        previous_close:
          type: number
          format: float
          minimum: 0
          example: 2550.0
        price_change:
          type: number
          format: float
          example: 30.0
        price_change_pct:
          type: number
          format: float
          example: 1.18
        timestamp:
          type: string
          format: date-time
          example: "2025-09-04T09:30:00Z"
        market_status:
          type: string
          enum: ["open", "closed", "pre_market", "after_hours"]
          example: "open"

    PriceHistoryItem:
      type: object
      required:
        - date
        - open
        - high
        - low
        - close
        - volume
        - stock_code
      properties:
        date:
          type: string
          format: date
          example: "2025-09-04"
        open:
          type: number
          format: float
          minimum: 0
          example: 2550.0
        high:
          type: number
          format: float
          minimum: 0
          example: 2590.0
        low:
          type: number
          format: float
          minimum: 0
          example: 2540.0
        close:
          type: number
          format: float
          minimum: 0
          example: 2580.0
        volume:
          type: integer
          minimum: 0
          example: 1250000
        stock_code:
          type: string
          pattern: '^[0-9]{4}$'
          example: "7203"

    WatchlistItemAPI:
      type: object
      required:
        - stock_code
        - company_name
        - added_date
      properties:
        stock_code:
          type: string
          pattern: '^[0-9]{4}$'
          example: "7203"
        company_name:
          type: string
          example: "トヨタ自動車株式会社"
        added_date:
          type: string
          format: date-time
          example: "2025-09-04T10:00:00Z"
        alert_price:
          type: number
          format: float
          minimum: 0
          nullable: true
          example: 2600.0
        notes:
          type: string
          nullable: true
          example: "Monitor for Q3 earnings"

    AddWatchlistRequest:
      type: object
      required:
        - stock_code
      properties:
        stock_code:
          type: string
          pattern: '^[0-9]{4}$'
          example: "7203"
        alert_price:
          type: number
          format: float
          minimum: 0
          nullable: true
          example: 2600.0
        notes:
          type: string
          nullable: true
          example: "Monitor for earnings"

    APIError:
      type: object
      required:
        - detail
      properties:
        detail:
          type: string
          example: "Stock code 0000 not found"
        error_type:
          type: string
          example: "validation_error"
        status_code:
          type: integer
          example: 404

  # Security schemes (if needed later)
  securitySchemes: {}

# Tags for grouping operations
tags:
  - name: Stock Information
    description: 株価情報関連のエンドポイント
  - name: Watchlist
    description: ウォッチリスト関連のエンドポイント