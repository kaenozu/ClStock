name: Code Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 2 * * 1'  # Weekly on Monday at 2 AM

jobs:
  security-audit:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety

    - name: Security audit with bandit
      run: |
        bandit -r . -f json -o bandit-security-report.json
        bandit -r . --severity-level medium

    - name: Dependency vulnerability check
      run: |
        safety check --json --output safety-report.json || true
        safety check

    - name: Upload security reports
      uses: actions/upload-artifact@v3
      with:
        name: security-reports
        path: |
          bandit-security-report.json
          safety-report.json

  dependency-review:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
    - name: Dependency Review
      uses: actions/dependency-review-action@v3

  code-metrics:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install radon xenon vulture

    - name: Calculate code metrics
      run: |
        # Cyclomatic complexity
        radon cc . --total-average --json -o complexity-report.json
        radon cc . --min=B

        # Maintainability index
        radon mi . --json -o maintainability-report.json
        radon mi . --min=B

        # Code complexity with xenon
        xenon --max-absolute B --max-modules B --max-average A .

    - name: Dead code detection
      run: |
        vulture . --min-confidence 80 > dead-code-report.txt || true

    - name: Upload metrics reports
      uses: actions/upload-artifact@v3
      with:
        name: code-metrics
        path: |
          complexity-report.json
          maintainability-report.json
          dead-code-report.txt

  documentation-check:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pydocstyle interrogate

    - name: Docstring style check
      run: |
        pydocstyle models/ data/ systems/ --convention=google

    - name: Documentation coverage
      run: |
        interrogate models/ data/ systems/ --ignore-init-method --ignore-magic --ignore-module --fail-under=70

  performance-benchmark:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest-benchmark

    - name: Run performance benchmarks
      run: |
        python -m pytest tests_new/performance/ --benchmark-only --benchmark-json=benchmark.json

    - name: Upload benchmark results
      uses: actions/upload-artifact@v3
      with:
        name: performance-benchmarks
        path: benchmark.json